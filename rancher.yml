---
- name: Install k3s
  hosts: rancher_server
  become: true
  vars:
    k3s_version: "v1.26.11+k3s2"
    k3s_config_dir: "/etc/rancher/k3s"
    k3s_kubeconfig: "{{ k3s_config_dir }}/k3s.yaml"
    k3s_install_timeout: 300
    k3s_retry_attempts: 12
    k3s_retry_delay: 10
    hostname: "{{ ansible_hostname }}"
    local_kubeconfig: "/Users/withneyguilherme/.kube/config.{{ hostname }}"

  tasks:
    - name: Create k3s config directory
      file:
        path: "{{ k3s_config_dir }}"
        state: directory
        mode: "0755"

    - name: Download k3s installation script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: "0755"

    - name: Install k3s
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
        INSTALL_K3S_EXEC: "server"
      shell: /tmp/k3s-install.sh
      args:
        creates: /usr/local/bin/k3s
      register: k3s_install

    - name: Wait for k3s service to be started
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Wait for k3s kubeconfig
      wait_for:
        path: "{{ k3s_kubeconfig }}"
        state: present
        timeout: "{{ k3s_install_timeout }}"

    - name: Read kubeconfig content
      slurp:
        src: "{{ k3s_kubeconfig }}"
      register: kubeconfig_content

    - name: Update kubeconfig server address
      set_fact:
        modified_kubeconfig: >-
          {{
            (kubeconfig_content.content | b64decode | from_yaml | combine({
              'clusters': [{
                'cluster': {
                  'server': 'https://' + ansible_host + ':6443'
                },
                'name': hostname
              }]
            })) | to_yaml
          }}

    - name: Ensure local .kube directory exists
      delegate_to: localhost
      become: false
      file:
        path: "{{ local_kubeconfig | dirname }}"
        state: directory
        mode: "0700"

    - name: Save kubeconfig locally
      delegate_to: localhost
      become: false
      copy:
        content: "{{ modified_kubeconfig }}"
        dest: "{{ local_kubeconfig }}"
        mode: "0600"

    - name: Wait for node to be ready
      command: k3s kubectl wait --for=condition=Ready node/{{ hostname }} --timeout=180s
      register: node_ready
      until: node_ready.rc == 0
      retries: "{{ k3s_retry_attempts }}"
      delay: "{{ k3s_retry_delay }}"

    - name: Get k3s status
      command: k3s kubectl get nodes -o wide
      register: k3s_status
      changed_when: false

    - name: Display cluster information
      debug:
        msg:
          - "K3s Version: {{ k3s_version }}"
          - "Cluster Status:"
          - "{{ k3s_status.stdout_lines }}"
          - ""
          - "Kubeconfig saved locally as: {{ local_kubeconfig }}"
          - "To use this cluster, run:"
          - "export KUBECONFIG={{ local_kubeconfig }}"
